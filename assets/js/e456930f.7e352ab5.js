"use strict";(self.webpackChunkdata_docs=self.webpackChunkdata_docs||[]).push([[423],{1266:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"what-is-data-engieering","metadata":{"permalink":"/data-engineering/blog/what-is-data-engieering","editUrl":"https://github.com/mqjd/data-engineering/tree/main/data-docs/blog/01-what-is-data-engieering.mdx","source":"@site/blog/01-what-is-data-engieering.mdx","title":"What is Data Engineering?","description":"","date":"2024-06-29T11:19:38.000Z","tags":[{"label":"Data","permalink":"/data-engineering/blog/tags/data"}],"readingTime":0.08,"hasTruncateMarker":false,"authors":[{"name":"Qiang Ma"}],"frontMatter":{"slug":"what-is-data-engieering","title":"What is Data Engineering?","authors":{"name":"Qiang Ma"},"tags":["Data"]},"unlisted":false,"nextItem":{"title":"Docker On Windows","permalink":"/data-engineering/blog/docker-on-windows"}},"content":"<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/qWru-b6m030?si=q90v54YMeP8lBi7O\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>"},{"id":"docker-on-windows","metadata":{"permalink":"/data-engineering/blog/docker-on-windows","editUrl":"https://github.com/mqjd/data-engineering/tree/main/data-docs/blog/02-docker-on-windows.mdx","source":"@site/blog/02-docker-on-windows.mdx","title":"Docker On Windows","description":"\u5b89\u88c5wsl","date":"2024-06-29T11:19:38.000Z","tags":[{"label":"Docker","permalink":"/data-engineering/blog/tags/docker"}],"readingTime":2.595,"hasTruncateMarker":false,"authors":[{"name":"Qiang Ma"}],"frontMatter":{"slug":"docker-on-windows","title":"Docker On Windows","authors":{"name":"Qiang Ma"},"tags":["Docker"]},"unlisted":false,"prevItem":{"title":"What is Data Engineering?","permalink":"/data-engineering/blog/what-is-data-engieering"}},"content":"## \u5b89\u88c5wsl\\n\\n\u6b64\u6b65\u9aa4\u7f51\u4e0a\u8d44\u6e90\u5f88\u591a\uff0c\u8bf7\u81ea\u884c\u767e\u5ea6\u6216Google\u5b8c\u6210\\n\\n## \u51c6\u5907\u5de5\u4f5c\\n\\n### \u914d\u7f6esudoers\\n```\\necho \\"$USER ALL=NOPASSWD: ALL\\" > \\"/etc/sudoers.d/$USER\\"\\n```\\n\\n### \u66f4\u6362\u955c\u50cf\u4e3a\u963f\u91cc\u4e91\u955c\u50cf\\n\u6b64\u6b65\u9aa4\u4e3b\u8981\u56fd\u5185\u8bbf\u95ee\u5b98\u65b9\u955c\u50cf\u6e90\u901f\u5ea6\u592a\u6162\uff0c\u53ef\u4ee5\u6839\u636e\u81ea\u8eab\u9700\u6c42\u786e\u8ba4\u662f\u5426\u66f4\u6362[\u963f\u91cc\u4e91\u955c\u50cf](https://developer.aliyun.com/mirror/ubuntu?spm=a2c6h.13651102.0.0.344d1b11eKKtHG)\u6216\u8005\u5176\u4ed6\u955c\u50cf\\n```\\nsudo cp /etc/apt/sources.list /etc/apt/sources.list.bak\\nsudo echo \\"\\" > /etc/apt/sources.list\\nsudo echo \\"deb https://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse\\" >> /etc/apt/sources.list\\nsudo echo \\"deb https://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse\\" >> /etc/apt/sources.list\\nsudo echo \\"deb https://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse\\" >> /etc/apt/sources.list\\nsudo echo \\"deb https://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse\\" >> /etc/apt/sources.list\\nsudo sudo apt-get update\\n```\\n\\n### \u5b89\u88c5\u4f9d\u8d56\u7ec4\u4ef6\\n\\n```bash\\nsudo apt install -y curl\\n```\\n\\n## \u5b89\u88c5docker\\n\\n\u4e0b\u9762\u7684\u5b89\u88c5\u811a\u6765\u81ea[https://raw.githubusercontent.com/karaage0703/ubuntu-setup/master/install-docker.sh](https://raw.githubusercontent.com/karaage0703/ubuntu-setup/master/install-docker.sh)\\n```bash\\nsudo apt-get -y install apt-transport-https ca-certificates curl gnupg-agent software-properties-common\\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\\nsudo apt-key fingerprint 0EBFCD88\\nsudo add-apt-repository \\"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\\"\\nsudo apt-get update\\nsudo apt-get -y install docker-ce docker-ce-cli containerd.io\\nsudo apt-get -y install docker-compose-plugin\\nsudo gpasswd -a $USER docker\\nsudo usermod -aG docker $USER\\n```\\n\\n\u542f\u52a8docker\\n```bash\\n# \u542f\u52a8\\nsudo service docker start\\n\\n# \u67e5\u770b\u72b6\u6001\\nsudo service docker status\\n```\\n\\n\u6d4b\u8bd5\\n```bash\\n# pull nginx\\nsudo docker pull nginx\\n\\n# start nginx\\nsudo docker run -d --name nginx -p 8080:80 nginx\\n\\n# \u5bb9\u5668IP\u83b7\u53d6\\ndocker inspect -f \'{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}\' \u5bb9\u5668\u540d\u79f0\u6216ID\\n\\ncurl 172.18.0.1:8080\\n```\\n\\n## \u5b89\u88c5 docker-compose\\n\\n```bash\\n# \u4e0b\u8f7d\u4e8c\u8fdb\u5236\\nsudo curl -L \\"https://github.com/docker/compose/releases/download/v2.5.0/docker-compose-$(uname -s)-$(uname -m)\\" -o /usr/local/bin/docker-compose\\n# \u589e\u52a0\u6267\u884c\u6743\u9650\\nsudo chmod +x /usr/local/bin/docker-compose\\n# \u68c0\u67e5\\ndocker-compose --version\\n```\\n\\n## \u5728windows\u4f7f\u7528docker\\n\\n### \u5b89\u88c5choco\\n\\n[\u5b98\u65b9\u6559\u7a0b](https://chocolatey.org/install)\\n\\n### \u5b89\u88c5docker-cli\\n\\n```powershell\\nchoco install docker-cli\\n```\\n\\n### \u914d\u7f6eDocker TCP\u8bbf\u95ee\\n\\n- \u4fee\u6539docker.service\\n  ```bash\\n  sudo vi /lib/systemd/system/docker.service\\n  ```\\n\\n- \u4fee\u6539ExecStart\u53c2\u6570\u589e\u52a0 \\"-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock\\"\\n  ```bash\\n  ExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock  --containerd=/run/containerd/containerd.sock\\n  ```\\n\\n- \u91cd\u65b0\u52a0\u8f7d\u5e76\u542f\u52a8\\n  ```bash\\n  sudo systemctl daemon-reload\\n  sudo service docker start\\n  ```\\n\\n## \u5728windows\u8bbf\u95eecontainer\\n\u9700\u8981\u5728window\u548cwsl\u5206\u522b\u8bbe\u7f6e\u5141\u8bb8\u8def\u7531\u8f6c\u53d1\\n### WSL\\n\\n```bash\\nsudo iptables -P FORWARD ACCEPT\\n```\\n\\n### Windows\\n\\n#### \u542f\u52a8\u8def\u7531\u670d\u52a1\\n\u627e\u5230\u4efb\u52a1\u7ba1\u7406\u5668 --\x3e \u670d\u52a1 --\x3e \u6253\u5f00\u670d\u52a1 --\x3e Routing and Remote Access --\x3e **\u542f\u52a8**\\n**\u6216\u8005**\u4f7f\u7528**\u7ba1\u7406\u5458**\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\\n```powershell\\nsc start RemoteAccess\\n```\\n\\n#### \u6dfb\u52a0\u8def\u7531\\n\\n> \u9700\u8981\u7ba1\u7406\u5458\u6743\u9650\u6267\u884c\uff0c\u66f4\u6362CONTAINER_IP\u3001WSL_IP \u4e3a\u81ea\u5df1\u7684\\n```powershell\\nroute add -P CONTAINER_IP mask 255.255.255.0 WSL_IP\\n```"}]}}')}}]);